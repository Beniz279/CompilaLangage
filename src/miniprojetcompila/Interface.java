/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniprojetcompila;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Zeyneub
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        first = new javax.swing.JButton();
        loadfile = new javax.swing.JButton();
        third = new javax.swing.JButton();
        second = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ZoneText = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        first.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        first.setText("Analyse Lexicale");
        first.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstActionPerformed(evt);
            }
        });

        loadfile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        loadfile.setText("Charger un fichier");
        loadfile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        loadfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadfileMouseClicked(evt);
            }
        });

        third.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        third.setText("Analyse Sémantique");
        third.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        third.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdActionPerformed(evt);
            }
        });

        second.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        second.setText("Analyse Syntaxique");
        second.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        second.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Commandes");

        ZoneText.setColumns(20);
        ZoneText.setRows(5);
        jScrollPane1.setViewportView(ZoneText);

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setText("Sortie");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(first, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(third, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loadfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(second, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loadfile, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(first, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(third, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstActionPerformed
        // TODO add your handling code here:
        BufferedReader reader= null;
        String aafficher ="";
        JFileChooser choix = new JFileChooser();
         choix.showOpenDialog(null);
        File f = choix.getSelectedFile();
       
        // Analyse Lexicale
        
       try {
           
      
      Scanner moncompila = new Scanner(f);
      while (moncompila.hasNextLine()) {
        
        String ligne = moncompila.nextLine();
         String tokens[];
         tokens = ligne.split(" "); 
          int i;
         for ( i=0 ; i<tokens.length ; i++){
             char caractères[];
            caractères = tokens[i].toCharArray();
             if (tokens[i].equals("Start_Program")) aafficher +=tokens[i] +" ==> Mot reservé début d'un programme \n";
        
            
             else if(tokens[i].equals("Int_Number")) aafficher +=tokens[i] +" ==> Mot reservé déclaration d'un entier\n";
          
             else if(tokens[i].equals("Real_Number")) aafficher +=tokens[i] +" ==> Mot reservé déclaration d'un entier\n";
             else if(tokens[i].equals("If")) aafficher +=tokens[i] +" ==> Mot reservé pour une condition\n";
             else if(tokens[i].equals(":")) aafficher +=tokens[i] +" ==> caractère réservé \n";
             else if(tokens[i].equals(",")) aafficher +=tokens[i] +" ==> caractère réservé\n";
             else if(tokens[i].equals("Give")) aafficher +=tokens[i] +" ==> Mot reservé \n";
             else if(tokens[i].equals("Affect")) aafficher +=tokens[i] +" ==> Mot reservé \n";
             else if(tokens[i].equals("Else")) aafficher +=tokens[i] +" ==> Mot reservé pour condition\n";
             else if(tokens[i].equals("Start")) aafficher +=tokens[i] +" ==> Mot reservé début d un bloc\n";
             else if(tokens[i].equals("Finish")) aafficher +=tokens[i] +" ==> Mot reservé fin d un bloc \n";
             else if(tokens[i].equals("ShowMes")) aafficher +=tokens[i] +" ==> Mot reservé pour affichage d un message à votre ecran \n";
             else if(tokens[i].equals("ShowVal")) aafficher +=tokens[i] +" ==> Mot reservé pour affichage d une valeur à votre ecran\n";
             else if(tokens[i].equals("\\.")) aafficher +=tokens[i] +" ==> Mot reservé pour commentaire \n";
             else if(tokens[i].equals("--")) aafficher +=tokens[i] +" ==> Mot reservé pour condition \n";
             else if(tokens[i].equals("To")) aafficher +=tokens[i] +" ==> Mot reservé pour affectation\n";
             else if(tokens[i].equals(";;")) aafficher +=tokens[i] +" ==> Mot reservé \n";
             else if(tokens[i].equals("End_Program")) aafficher +=tokens[i] +" ==> Mot reservé Fin programme \n";
             else if(tokens[i].equals("String")) aafficher +=tokens[i] +" ==> Mot reservé declaration d une chaine de caractres \n";
             else if(tokens[i].equals("Finish")) aafficher +=tokens[i] +" ==> Mot reservé fin d un bloc d instructions \n";
             //else if(caractères[1] < 97 && caractères[1] >= 122  || caractères[1] < 65 && caractères[1] >= 90  ) aafficher +=tokens[i] +" ==> Identificateur \n";
              
             else{
                 int k = NumberType(tokens[i]);
                 if (k==0) aafficher +=tokens[i] +" ==> Nombre entier \n";
                 else if (k==2) aafficher +=tokens[i] +" ==> Nombre reel \n";
                 //else aafficher +=tokens[i] +" ==> Nombre non bien declaré \n";
             
                 }
       
        
     
      }
      }
      ZoneText.setText(aafficher);
      moncompila.close();
    } catch (FileNotFoundException e) {
      e.printStackTrace();
    }
        
    }//GEN-LAST:event_firstActionPerformed

    private void thirdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thirdActionPerformed

    private void secondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondActionPerformed
        // TODO add your handling code here:
      //Analyse Syntaxique 
      BufferedReader reader= null;
        String aafficher ="";
        JFileChooser choix = new JFileChooser();
         choix.showOpenDialog(null);
        File f = choix.getSelectedFile();
        
        
       String condition[]={"<",">","=","!="};
  
       
        // Analyse Syntaxique
        
       try{
           
      
      Scanner moncompila = new Scanner(f);
      while (moncompila.hasNextLine()) {
        int i;
        String ligne = moncompila.nextLine();
         String inst[];
         inst= ligne.split(" "); 
         int n= inst.length;
         if (inst[0].equals("Start_Program")) {aafficher +=ligne+" ==> Debut du programme \n";}
         else if (inst[0].equals("Int_Number")&& inst[1].equals(":") && identif(inst[2])&& inst[3].equals(";;")   ) {
                aafficher +=ligne+" ==> Declaration d'entiers  \n";}
         else if(inst[0].equals("Real_Number")&& inst[1].equals(":") && identif(inst[2]) && inst[3].equals( ";;")   ){
                aafficher +=ligne +" ==> Declaration de reels  \n";}
         
      else if(inst[0].equals("If")&& inst[1].equals("--") && identif(inst[2]) && contain(condition,inst[3]) && identif(inst[4]) ){
                aafficher +=ligne +" ==> Verifier une condition \n";}
         else if(inst[0].equals("Give")&& identif(inst[1]) && inst[2].equals(":") && Val(inst[3]) && inst[3].equals( ";;")  ){
             aafficher +=ligne +" ==> Affectation d une valeur à une variable \n";}
         else if(inst[0].equals("Else")){
             aafficher +=ligne +" ==> Sinon \n";}
         else if(inst[0].equals("Start")){
             aafficher +=ligne +" \n";}
         else if(inst[0].equals("ShowMes ")&& inst[1].equals(": ") &&  inst[2].equals("\" \" ") && inst[n-1].equals(";;") ){
             aafficher +=ligne +" ==> Message a afficher  \n";}
         else if(inst[0].equals("ShowVal")&& inst[1].equals(":")) //&& containvaleur(ident,inst[2]) && inst[n-1].equals(";;") )
                 {
             aafficher +=ligne +" ==> Valeur à afficher  \n";}
          else if(inst[0].equals("//.")){
             aafficher +=ligne +" ==> c est un commentaire \n";}
          else if(inst[0].equals("Finish")) {aafficher +=ligne +" \n";}
          else if(inst[0].equals("End_Program")) {aafficher +=ligne +" \n";}
          
      
          else {aafficher +=ligne +" ==> Erreur Syntaxique \n";}
      }
     
             
      ZoneText.setText(aafficher);
      moncompila.close();
       } catch (FileNotFoundException e) {
      e.printStackTrace();
    }
      
    }//GEN-LAST:event_secondActionPerformed

    private void loadfileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadfileMouseClicked
        // TODO add your handling code here:
        BufferedReader reader= null;
        String aafficher ="";
        JFileChooser choix = new JFileChooser();
         choix.showOpenDialog(null);
        File f = choix.getSelectedFile();
        //String chemin = f.getAbsolutePath();
        
       try {
      
      Scanner myReader = new Scanner(f);
      while (myReader.hasNextLine()) {
        String cara = myReader.nextLine();
        aafficher +=cara +"\n";
       
      }
      ZoneText.setText(aafficher);
       
      myReader.close();
    } catch (FileNotFoundException e) {
      e.printStackTrace();
    }
       
    
    }//GEN-LAST:event_loadfileMouseClicked

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ZoneText;
    private javax.swing.JButton first;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadfile;
    private javax.swing.JButton second;
    private javax.swing.JButton third;
    // End of variables declaration//GEN-END:variables

public static int NumberType(String str)
	{
		int t=0; // entier 

		String[] is=str.split(",");

		if(is.length==2)
		{
			t=1; // Float
		}

		else if(is.length<2)
		{t=-1;}

		return t; // erreur 

	}


public static boolean  identif(String c){
    boolean contain=true;
    char [] cc = c.toCharArray();
    if(cc[0]>= 97 && cc[0] <= 122 || cc[0]>= 65 && cc[0] <= 90 ){ // Verifier si le 1er caractère est une letrre (code ascii)
    
     if (c.equals("Start") || c.equals("Finish") || c.equals("Start_Program") || c.equals("End_Program ") || c.equals("Give") || c.equals("ShowMes") || c.equals("ShowVal") || c.equals("If") || c.equals("Elset") || c.equals("Real_Number") || c.equals("Int_Number"))
     {
     contain = false;}
         
     }
    return contain;
}

public static boolean  Val(String c){
    boolean est=true;

        char[] cc = c.toCharArray();
    for (int i=0; i<cc.length ; i++){
        if (cc[i] <=48 && cc[i] >=57 ) {est =false;}
        
        
    }
    return est;
    
    
}
public static boolean  contain(String [] c , String k ){
    boolean contain=false;
    for(int i=0; i<c.length ; i++ )
    {
        if (c[i] == k) { contain = true; }
        
        }
    
     return contain ;
     }


   public static void main(String[] args) {
        
        
        // TODO code application logic here
       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
        
    }
}
